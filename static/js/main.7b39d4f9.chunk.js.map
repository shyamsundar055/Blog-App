{"version":3,"sources":["logo.svg","Pages/postshortview.js","Services/apiutilities.js","Services/apiservice.js","Pages/loading.js","Components/postlistcomponent.js","Pages/postdetailview.js","Pages/about.js","Pages/pagenotfound.js","Components/mastercomponent.js","Pages/navbar.js","Components/headercomponent.js","Components/footerComponent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","PostShortView","props","className","postItem","title","body","to","id","axios","create","baseURL","APIService","getPostData","postId","API","get","then","res","data","getPostComments","Loading","style","minHeight","paddingTop","PostListComponent","useState","postItemsData","setPostItems","isLoading","setLoading","useEffect","timer","setTimeout","userId","clearTimeout","role","map","key","PostDetailView","useParams","postData","setPostData","postComments","setPostComments","comment","email","About","PageNotFound","MasterComponent","path","children","exact","component","NavBar","href","src","logo","width","height","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","length","aria-current","HeaderComponent","location","useLocation","pathname","replace","FooterComponent","fontSize","color","target","rel","App","basename","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7b39d4f9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nfunction PostShortView(props) {\r\n\r\n    return (\r\n        <div className=\"blog-post\">\r\n            <h4 className=\"blog-post-title\">\r\n                {props.postItem.title}\r\n            </h4>\r\n            <p className=\"blog-post-meta\">\r\n                January 1, 2014 by shyam sundar\r\n            </p>\r\n            <p>\r\n                {props.postItem.body}\r\n            </p>\r\n            <Link to={\"/posts/\" + props.postItem.id}>Continue reading...</Link>\r\n            <hr />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostShortView","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: `https://jsonplaceholder.typicode.com/`\r\n});","import API from './apiutilities'; \r\n\r\n\r\nconst APIService = {\r\n    getPostData: function(postId){\r\n        return API.get('posts'+(postId ? \"/\"+postId : \"\")).then(res => {\r\n            return res.data;\r\n        }) \r\n    },\r\n    getPostComments:function(postId){\r\n        return API.get('comments?postId='+postId).then(res => {\r\n            return res.data;\r\n        }) \r\n    }\r\n}\r\n\r\nexport default APIService;","import React from 'react';\r\n\r\n\r\nfunction Loading() {\r\n    return (\r\n        <div style={{minHeight:\"780px\",paddingTop:\"250px\"}}>\r\n            <div className=\"cssload-triangles\">\r\n                <div className=\"cssload-tri cssload-invert\"></div>\r\n                <div className=\"cssload-tri cssload-invert\"></div>\r\n                <div className=\"cssload-tri\"></div>\r\n                <div className=\"cssload-tri cssload-invert\"></div>\r\n                <div className=\"cssload-tri cssload-invert\"></div>\r\n                <div className=\"cssload-tri\"></div>\r\n                <div className=\"cssload-tri cssload-invert\"></div>\r\n                <div className=\"cssload-tri\"></div>\r\n                <div className=\"cssload-tri cssload-invert\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading","import React, { useState, useEffect } from 'react';\r\nimport PostShortView from '../Pages/postshortview'\r\nimport APIService from '../Services/apiservice'\r\nimport Loading from '../Pages/loading'\r\n\r\nfunction PostListComponent(props) {\r\n    const [postItemsData, setPostItems] = useState([]);\r\n    const [isLoading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        function getPostDetails() {\r\n            APIService.getPostData(props.userId).then(data => {\r\n                setLoading(false);\r\n                setPostItems(data)\r\n\r\n            });\r\n\r\n        }\r\n        const timer = setTimeout(() => {\r\n            getPostDetails()\r\n        }, 1000);\r\n\r\n        return () => clearTimeout(timer);\r\n    }, [props.userId])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <main role=\"main\" className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12 blog-main\">\r\n                            {\r\n                                !isLoading ?\r\n                                    postItemsData.map((postItem) =>\r\n\r\n                                        <PostShortView key={postItem.id} postItem={postItem} />\r\n                                    )\r\n                                    : <Loading />\r\n\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PostListComponent","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport APIService from '../Services/apiservice'\r\nimport Loading from '../Pages/loading'\r\n\r\nfunction PostDetailView() {\r\n    let { id } = useParams(); \r\n    const [postData, setPostData] = useState({});\r\n    const [postComments, setPostComments] = useState([]);\r\n    const [isLoading, setLoading] = useState(true); \r\n\r\n    useEffect(() => {\r\n        function getPostDetails() {\r\n            APIService.getPostData(id).then(data => {\r\n                setPostData(data);\r\n            });\r\n\r\n        }\r\n        function getPostCommentDetails() {\r\n            APIService.getPostComments(id).then(data => {\r\n                setLoading(false);\r\n                setPostComments(data);\r\n            })\r\n\r\n        }\r\n\r\n\r\n        const timer = setTimeout(() => {\r\n            getPostDetails();\r\n            getPostCommentDetails();\r\n        }, 1000);\r\n\r\n        return () => clearTimeout(timer);\r\n\r\n    }, [id])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"blog-post\">\r\n                {!isLoading ? <>\r\n                    <h4 className=\"blog-post-title\">\r\n                        {postData.title}\r\n                    </h4>\r\n                    <p className=\"blog-post-meta\">\r\n                        January 1, 2014 by shyam sundar\r\n                    </p>\r\n                    <p>\r\n                        {postData.body}\r\n                    </p>\r\n                    <hr />\r\n                    <h5>Comments: </h5>\r\n                    <hr />\r\n                    <ul>\r\n                        {\r\n                            postComments.map((comment) =>\r\n                                <li key={comment.id}><h6>{comment.email}:</h6><p> {comment.body}</p></li>\r\n                            )\r\n                        }\r\n                    </ul>\r\n                    </>\r\n                    : <Loading />\r\n                }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PostDetailView","import React from 'react'; \r\n\r\nfunction About (){\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"col-md-12 blog-main\" style={{minHeight:\"780px\"}}>\r\n            <h3 className=\"text-center\">About Us</h3>\r\n            <br/>\r\n            <p>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Feugiat in ante metus dictum. Ut ornare lectus sit amet est. Rhoncus urna neque viverra justo. Feugiat nibh sed pulvinar proin gravida hendrerit lectus. Egestas diam in arcu cursus euismod quis. Eleifend quam adipiscing vitae proin sagittis nisl rhoncus mattis. Libero enim sed faucibus turpis. Diam maecenas sed enim ut sem viverra aliquet. Commodo elit at imperdiet dui accumsan sit amet. Ullamcorper sit amet risus nullam. Metus dictum at tempor commodo. Urna nec tincidunt praesent semper feugiat nibh. Tortor at risus viverra adipiscing at in. Eu facilisis sed odio morbi quis commodo odio. Cursus in hac habitasse platea dictumst quisque sagittis purus.\r\n            </p>\r\n            <p>\r\n            Id ornare arcu odio ut sem nulla pharetra diam sit. Bibendum est ultricies integer quis auctor elit sed. Viverra nibh cras pulvinar mattis nunc sed blandit libero. Ullamcorper dignissim cras tincidunt lobortis feugiat vivamus. Ipsum dolor sit amet consectetur adipiscing elit duis tristique. Vestibulum lectus mauris ultrices eros in cursus turpis massa tincidunt. Risus sed vulputate odio ut. Laoreet sit amet cursus sit amet dictum sit amet. Eu feugiat pretium nibh ipsum consequat nisl vel pretium. Arcu non sodales neque sodales ut etiam sit.\r\n            </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About","import React from 'react'\r\nimport '../styles/notfound.css';\r\nimport { \r\n    Link    \r\n  } from \"react-router-dom\";\r\n\r\nfunction PageNotFound(){\r\n\r\n    return (\r\n        <div id=\"notfound\">\r\n\t\t<div className=\"notfound\">\r\n\t\t\t<div className=\"notfound-404\">\r\n\t\t\t\t<h1>404</h1>\r\n\t\t\t</div>\r\n\t\t\t<h2>Oops! Nothing was found</h2>\r\n\t\t\t<p>The page you are looking for might have been removed had its name changed or is temporarily unavailable. <Link className=\"nav-link\" to=\"/\">Retunr to Homepage</Link> </p> \r\n\t\t</div>\r\n\t</div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageNotFound;\r\n","import React from 'react';\r\nimport {\r\n    Route,\r\n    Switch\r\n} from \"react-router-dom\";\r\nimport PostListComponent from './postlistcomponent';\r\nimport PostDetailView from '../Pages/postdetailview';\r\nimport About from '../Pages/about';\r\nimport PageNotFound from '../Pages/pagenotfound'\r\n\r\nfunction MasterComponent() {\r\n\r\n    return (\r\n        <>\r\n            <Switch>\r\n                <Route path=\"/posts/:id\" children={<PostDetailView />} />\r\n                <Route path=\"/about\">\r\n                    <About />\r\n                </Route>\r\n                <Route exact path=\"/\">\r\n                    <PostListComponent />\r\n                </Route>\r\n                <Route component={PageNotFound} />\r\n            </Switch>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MasterComponent","import React from 'react';\r\nimport logo from '../logo.svg';\r\nimport { \r\n    Link    \r\n  } from \"react-router-dom\";\r\n\r\nfunction NavBar(props) { \r\n    return (\r\n        <>\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark text-center\">\r\n        <div className=\"container\">\r\n            <a className=\"navbar-brand\" href=\"#\">\r\n                <img src={logo} width=\"36\" height=\"36\" alt=\"\"/> Blog\r\n            </a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            \r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/\">Home</Link> \r\n                    </li> \r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/about\">About</Link> \r\n                    </li> \r\n                </ul> \r\n            </div>\r\n            </div>\r\n        </nav>\r\n        <div className=\"container\">\r\n            <nav aria-label=\"breadcrumb\">\r\n            <ol className=\"breadcrumb\">\r\n            {\r\n                props.path.length > 0 ?\r\n                <li className={props.path.length > 0 ? \"breadcrumb-item\" :\"breadcrumb-item active\"} >\r\n                    <Link to=\"/\">Home</Link> \r\n                </li>:\"\"\r\n            }\r\n            {\r\n                props.path.length > 0 ?\r\n                <li className=\"breadcrumb-item active\" aria-current=\"page\">{props.path}</li>\r\n                : \"\"\r\n            }\r\n            </ol> \r\n            </nav>\r\n      </div>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default NavBar","import React from 'react';\r\nimport NavBar from '../Pages/navbar'\r\nimport { \r\n    useLocation\r\n} from \"react-router-dom\";\r\n\r\nfunction HeaderComponent (){\r\n    let location = useLocation();\r\n    let path = location.pathname.length > 1 ? location.pathname.replace(\"/posts/\",\"Post ID:\") : \"\";\r\n    \r\n    return(\r\n        <NavBar path={path} />\r\n    )\r\n}\r\n\r\nexport default HeaderComponent","import React  from 'react'; \r\n\r\nfunction FooterComponent (){\r\n   \r\n    return(\r\n        <footer className=\"footer py-3 bg-dark text-center\">\r\n        <div className=\"container\">\r\n          <span style={{fontSize:\"14px\",color:\"#fff\"}} >Created by <a href=\"https://github.com/shyamsundar055\" target=\"_blank\" rel=\"noopener noreferrer\">Shyam Sundar</a></span>\r\n        </div>\r\n      </footer>\r\n    )\r\n}\r\n\r\nexport default FooterComponent","import React from 'react';\nimport './styles/App.css';\nimport './styles/blog.css';\nimport {\n  BrowserRouter as Router,\n  Route\n} from \"react-router-dom\";\nimport MasterComponent from './Components/mastercomponent'\nimport HeaderComponent from './Components/headercomponent'\nimport FooterComponent from './Components/footerComponent'\n\n\nfunction App() {\n\n  return (\n    <Router basename=\"/Blog-app\">\n      <Route path=\"/\">\n        <HeaderComponent />\n        <MasterComponent />\n        <FooterComponent />\n      </Route>\n    </Router>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}